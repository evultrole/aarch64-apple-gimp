diff --git a/gio/Makefile.am b/gio/Makefile.am
index 6b3eb57a..b7380c04 100644
--- a/gio/Makefile.am
+++ b/gio/Makefile.am
@@ -36,8 +36,6 @@ EXTRA_DIST =
 # gio module
 GIO_OVERRIDES = 			\
 	gio.override			\
-	gappinfo.override		\
-	gapplaunchcontext.override 	\
 	gbufferedinputstream.override	\
 	gcancellable.override		\
 	gdatainputstream.override	\
diff --git a/gio/gio.defs b/gio/gio.defs
index f5a28b6d..694b63cb 100644
--- a/gio/gio.defs
+++ b/gio/gio.defs
@@ -2,194 +2,6 @@
 
 (include "gio-types.defs")
 
-;; From gappinfo.h
-
-(define-function app_info_get_type
-  (c-name "g_app_info_get_type")
-  (return-type "GType")
-)
-
-(define-function app_launch_context_get_type
-  (c-name "g_app_launch_context_get_type")
-  (return-type "GType")
-)
-
-(define-function app_info_create_from_commandline
-  (c-name "g_app_info_create_from_commandline")
-  (is-constructor-of "GAppInfo")
-  (return-type "GAppInfo*")
-  (parameters
-    '("const-char*" "commandline")
-    '("const-char*" "application_name" (null-ok) (default "NULL"))
-    '("GAppInfoCreateFlags" "flags" (default "G_APP_INFO_CREATE_NONE"))
-    '("GError**" "error")
-  )
-)
-
-(define-method dup
-  (of-object "GAppInfo")
-  (c-name "g_app_info_dup")
-  (return-type "GAppInfo*")
-  (caller-owns-return #t)
-)
-
-(define-method equal
-  (of-object "GAppInfo")
-  (c-name "g_app_info_equal")
-  (return-type "gboolean")
-  (parameters
-    '("GAppInfo*" "appinfo2")
-  )
-)
-
-(define-method get_id
-  (of-object "GAppInfo")
-  (c-name "g_app_info_get_id")
-  (return-type "const-char*")
-)
-
-(define-method get_name
-  (of-object "GAppInfo")
-  (c-name "g_app_info_get_name")
-  (return-type "const-char*")
-)
-
-(define-method get_description
-  (of-object "GAppInfo")
-  (c-name "g_app_info_get_description")
-  (return-type "const-char*")
-)
-
-(define-method get_executable
-  (of-object "GAppInfo")
-  (c-name "g_app_info_get_executable")
-  (return-type "const-char*")
-)
-
-(define-method get_icon
-  (of-object "GAppInfo")
-  (c-name "g_app_info_get_icon")
-  (return-type "GIcon*")
-)
-
-;;
-;; wrapped in gappinfo.override
-;;
-(define-method launch
-  (docstring
-  "launch (files=None, launch_context=None) -> gboolean\n"
-  "\n"
-  "Launches the application. Passes files to the launched application\n"
-  "as arguments, using the optional launch_context to get information\n"
-  "about the details of the launcher (like what screen it is on).\n"
-  "On error, error will be set accordingly.\n\n"
-  "Note that even if the launch is successful the application launched\n"
-  "can fail to start if it runs into problems during startup.\n"
-  "There is no way to detect this.\n\n"
-  "Some URIs can be changed when passed through a gio.File\n"
-  "(for instance unsupported uris with strange formats like mailto:),\n"
-  "so if you have a textual uri you want to pass in as argument,\n"
-  "consider using gio.AppInfo.launch_uris() instead."
-  )
-  (of-object "GAppInfo")
-  (c-name "g_app_info_launch")
-  (return-type "gboolean")
-  (parameters
-    '("GList*" "files")
-    '("GAppLaunchContext*" "launch_context")
-    '("GError**" "error")
-  )
-)
-
-(define-method supports_uris
-  (of-object "GAppInfo")
-  (c-name "g_app_info_supports_uris")
-  (return-type "gboolean")
-)
-
-(define-method supports_files
-  (of-object "GAppInfo")
-  (c-name "g_app_info_supports_files")
-  (return-type "gboolean")
-)
-
-;;
-;; wrapped in gappinfo.override
-;;
-(define-method launch_uris
-  (docstring
-  "launch_uris (files=None, launch_context=None) -> gboolean\n"
-  "\n"
-  "Launches the application. Passes files to the launched application\n"
-  "as arguments, using the optional launch_context to get information\n"
-  "about the details of the launcher (like what screen it is on).\n"
-  "On error, error will be set accordingly.\n\n"
-  "Note that even if the launch is successful the application launched\n"
-  "can fail to start if it runs into problems during startup.\n"
-  "There is no way to detect this.\n\n"
-  )
-  (of-object "GAppInfo")
-  (c-name "g_app_info_launch_uris")
-  (return-type "gboolean")
-  (parameters
-    '("GList*" "uris")
-    '("GAppLaunchContext*" "launch_context")
-    '("GError**" "error")
-  )
-)
-
-(define-method should_show
-  (of-object "GAppInfo")
-  (c-name "g_app_info_should_show")
-  (return-type "gboolean")
-)
-
-(define-method set_as_default_for_type
-  (of-object "GAppInfo")
-  (c-name "g_app_info_set_as_default_for_type")
-  (return-type "gboolean")
-  (parameters
-    '("const-char*" "content_type")
-    '("GError**" "error")
-  )
-)
-
-(define-method set_as_default_for_extension
-  (of-object "GAppInfo")
-  (c-name "g_app_info_set_as_default_for_extension")
-  (return-type "gboolean")
-  (parameters
-    '("const-char*" "extension")
-    '("GError**" "error")
-  )
-)
-
-(define-method add_supports_type
-  (of-object "GAppInfo")
-  (c-name "g_app_info_add_supports_type")
-  (return-type "gboolean")
-  (parameters
-    '("const-char*" "content_type")
-    '("GError**" "error")
-  )
-)
-
-(define-method can_remove_supports_type
-  (of-object "GAppInfo")
-  (c-name "g_app_info_can_remove_supports_type")
-  (return-type "gboolean")
-)
-
-(define-method remove_supports_type
-  (of-object "GAppInfo")
-  (c-name "g_app_info_remove_supports_type")
-  (return-type "gboolean")
-  (parameters
-    '("const-char*" "content_type")
-    '("GError**" "error")
-  )
-)
-
 ;;
 ;; wrapped in gio.override
 ;;
@@ -209,55 +21,12 @@
   )
 )
 
-(define-function app_info_get_default_for_type
-  (c-name "g_app_info_get_default_for_type")
-  (return-type "GAppInfo*")
-  (parameters
-    '("const-char*" "content_type")
-    '("gboolean" "must_support_uris")
-  )
-)
-
-(define-function app_info_get_default_for_uri_scheme
-  (c-name "g_app_info_get_default_for_uri_scheme")
-  (return-type "GAppInfo*")
-  (parameters
-    '("const-char*" "uri_scheme")
-  )
-)
-
 (define-function app_launch_context_new
   (c-name "g_app_launch_context_new")
   (is-constructor-of "GAppLaunchContext")
   (return-type "GAppLaunchContext*")
 )
 
-;;
-;; wrapped in gapplaunchcontext.override
-;;
-(define-method get_display
-  (of-object "GAppLaunchContext")
-  (c-name "g_app_launch_context_get_display")
-  (return-type "char*")
-  (parameters
-    '("GAppInfo*" "info")
-    '("GList*" "files")
-  )
-)
-
-;;
-;; wrapped in gapplaunchcontext.override
-;;
-(define-method get_startup_notify_id
-  (of-object "GAppLaunchContext")
-  (c-name "g_app_launch_context_get_startup_notify_id")
-  (return-type "char*")
-  (parameters
-    '("GAppInfo*" "info")
-    '("GList*" "files")
-  )
-)
-
 (define-method launch_failed
   (of-object "GAppLaunchContext")
   (c-name "g_app_launch_context_launch_failed")
@@ -275,25 +44,6 @@
   )
 )
 
-(define-method can_delete
-  (of-object "GAppInfo")
-  (c-name "g_app_info_can_delete")
-  (return-type "gboolean")
-)
-
-(define-method delete
-  (of-object "GAppInfo")
-  (c-name "g_app_info_delete")
-  (return-type "gboolean")
-)
-
-(define-method get_commandline
-  (of-object "GAppInfo")
-  (c-name "g_app_info_get_commandline")
-  (return-type "const-char*")
-)
-
-
 
 ;; From gasyncinitable.h
 
diff --git a/gio/unix-types.defs b/gio/unix-types.defs
index ed1ed9f1..3f51436c 100644
--- a/gio/unix-types.defs
+++ b/gio/unix-types.defs
@@ -7,18 +7,6 @@
   (gtype-id "G_TYPE_UNIX_CONNECTION")
 )
 
-(define-object DesktopAppInfo
-  (docstring
-  "DesktopAppInfo(desktop_id) -> gio.unix.DesktopAppInfo\n\n"
-  "gio.Unix.DesktopAppInfo is an implementation of gio.AppInfo\n"
-  "based on desktop files."
-  )
-  (in-module "giounix")
-  (parent "GObject")
-  (c-name "GDesktopAppInfo")
-  (gtype-id "G_TYPE_DESKTOP_APP_INFO")
-)
-
 (define-object FDMessage
   (in-module "giounix")
   (parent "GSocketControlMessage")
diff --git a/gio/unix.override b/gio/unix.override
index aebc6fca..08e27e92 100644
--- a/gio/unix.override
+++ b/gio/unix.override
@@ -24,7 +24,6 @@ headers
 #define NO_IMPORT_PYGOBJECT
 #include <pygobject.h>
 #include <gio/gio.h>
-#include <gio/gdesktopappinfo.h>
 #include <gio/gunixinputstream.h>
 #include <gio/gunixmounts.h>
 #include <gio/gunixoutputstream.h>
