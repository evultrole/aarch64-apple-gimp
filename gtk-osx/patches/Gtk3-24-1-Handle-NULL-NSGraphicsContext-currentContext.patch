From 4ae16f5a4f9d5e84ddae21401d79e4d58ea5cbdd Mon Sep 17 00:00:00 2001
From: John Ralls <jralls@ceridwen.us>
Date: Mon, 15 Oct 2018 10:50:49 -0700
Subject: [PATCH 3/3] Handle NULL NSGraphicsContext currentContext.

Return NULL from gdk_window_impl_quartz_get_context immediately to avoid
quartz errors and don't try to call cairo functions with the NULL in
upstream functions.

Closes: https://gitlab.gnome.org/GNOME/gtk/issues/1411
---
 gdk/gdkcairo.c                |  3 ++-
 gdk/gdkwindow.c               | 20 ++++++++++++--------
 gdk/quartz/gdkwindow-quartz.c |  6 ++++--
 3 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/gdk/gdkcairo.c b/gdk/gdkcairo.c
index 633b391..a8df0d0 100644
--- a/gdk/gdkcairo.c
+++ b/gdk/gdkcairo.c
@@ -303,7 +303,8 @@ gdk_cairo_surface_create_from_pixbuf (const GdkPixbuf *pixbuf,
                                               gdk_pixbuf_get_height (pixbuf),
 					      scale);
 
-  gdk_cairo_surface_paint_pixbuf (surface, pixbuf);
+  if (surface)
+    gdk_cairo_surface_paint_pixbuf (surface, pixbuf);
 
   return surface;
 }
diff --git a/gdk/gdkwindow.c b/gdk/gdkwindow.c
index 6b231f0..1244f87 100644
--- a/gdk/gdkwindow.c
+++ b/gdk/gdkwindow.c
@@ -10234,7 +10234,7 @@ gdk_window_create_similar_image_surface (GdkWindow *     window,
 					 int             scale)
 {
   GdkWindowImplClass *impl_class;
-  cairo_surface_t *window_surface, *surface;
+  cairo_surface_t *window_surface, *surface = NULL;
   GdkDisplay *display;
   GdkScreen *screen;
 
@@ -10254,18 +10254,22 @@ gdk_window_create_similar_image_surface (GdkWindow *     window,
   else
     {
       window_surface = gdk_window_ref_impl_surface (window);
-      surface =
-        cairo_surface_create_similar_image (window_surface,
-                                            format,
-                                            width,
-                                            height);
-      cairo_surface_destroy (window_surface);
+      if (window_surface)
+        {
+          surface =
+                cairo_surface_create_similar_image (window_surface,
+                                                    format,
+                                                    width,
+                                                    height);
+          cairo_surface_destroy (window_surface);
+        }
     }
 
   if (scale == 0)
     scale = gdk_window_get_scale_factor (window);
 
-  cairo_surface_set_device_scale (surface, scale, scale);
+  if (surface)
+    cairo_surface_set_device_scale (surface, scale, scale);
 
   return surface;
 }
diff --git a/gdk/quartz/gdkwindow-quartz.c b/gdk/quartz/gdkwindow-quartz.c
index c7fe688..2e7edd1 100644
--- a/gdk/quartz/gdkwindow-quartz.c
+++ b/gdk/quartz/gdkwindow-quartz.c
@@ -141,6 +141,8 @@ gdk_window_impl_quartz_get_context (GdkWindowImplQuartz *window_impl,
        cg_context = [[NSGraphicsContext currentContext] graphicsPort];
   else
        cg_context = [[NSGraphicsContext currentContext] CGContext];
+  if (!cg_context)
+      return NULL;
   CGContextSaveGState (cg_context);
   CGContextSetAllowsAntialiasing (cg_context, antialias);
 
@@ -332,8 +334,8 @@ gdk_quartz_ref_cairo_surface (GdkWindow *window)
           gdk_quartz_create_cairo_surface (impl,
                                            gdk_window_get_width (impl->wrapper) * scale,
                                            gdk_window_get_height (impl->wrapper) * scale);
-
-      cairo_surface_set_device_scale (impl->cairo_surface, scale, scale);
+      if (impl->cairo_surface)
+        cairo_surface_set_device_scale (impl->cairo_surface, scale, scale);
     }
   else
     cairo_surface_reference (impl->cairo_surface);
-- 
2.2.2

