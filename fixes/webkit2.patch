--- a/Source/JavaScriptCore/assembler/ARM64Assembler.h	2017-04-04 09:22:00.000000000 -0600
+++ b/Source/JavaScriptCore/assembler/ARM64Assembler.h	2021-03-15 19:22:33.000000000 -0600
@@ -34,6 +34,11 @@
 #include <wtf/Vector.h>
 #include <stdint.h>
 
+#if OS(DARWIN) && CPU(ARM64)
+#include <arm/param.h>
+#include <libkern/OSCacheControl.h>
+#endif
+
 #define CHECK_DATASIZE_OF(datasize) ASSERT(datasize == 32 || datasize == 64)
 #define DATASIZE_OF(datasize) ((datasize == 64) ? Datasize_64 : Datasize_32)
 #define MEMOPSIZE_OF(datasize) ((datasize == 8 || datasize == 128) ? MemOpSize_8_or_128 : (datasize == 16) ? MemOpSize_16 : (datasize == 32) ? MemOpSize_32 : MemOpSize_64)
@@ -2751,6 +2756,8 @@
     {
 #if OS(IOS)
         sys_cache_control(kCacheFunctionPrepareForExecution, code, size);
+#elif OS(MAC_OS_X)
+        sys_cache_control(kCacheFunctionPrepareForExecution, code, size);
 #elif OS(LINUX)
         size_t page = pageSize();
         uintptr_t current = reinterpret_cast<uintptr_t>(code);

--- a/Source/WTF/wtf/Optional.h	2017-02-20 09:20:15.000000000 -0700
+++ b/Source/WTF/wtf/Optional.h	2021-03-15 20:33:56.000000000 -0600
@@ -296,12 +296,6 @@
 constexpr nullopt_t nullopt{nullopt_t::init()};
 
 
-// 20.5.8, class bad_optional_access
-class bad_optional_access : public std::logic_error {
-public:
-  explicit bad_optional_access(const std::string& what_arg) : std::logic_error{what_arg} {}
-  explicit bad_optional_access(const char* what_arg) : std::logic_error{what_arg} {}
-};
 
 
 template <class T>
