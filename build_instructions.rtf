{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red170\green171\blue37;}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c72330\c71683\c18597;}
\margl1440\margr1440\vieww15700\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #######################################################################################\
#######################################################################################\
#######################################################################################\
#REQUIREMENTS\
#ensure that rust is installed\
#the run python3 at least once so that the command line tools install\
\
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\
python3\
\
#\
#\
#\
#\
#######################################################################################\
#######################################################################################\
#######################################################################################\
#\
# Variables\
#\
\
mkdir -p ~/
\f1\fs22 \cf2 \CocoaLigature0 Library/Python/3.8/lib/python/site-packages\

\f0\fs24 \cf0 \CocoaLigature1 mkdir -p ~/
\f1\fs22 \cf2 \CocoaLigature0 Library/Python/2.7/lib/python/site-packages
\f0\fs24 \cf0 \CocoaLigature1 \
mkdir -p ~/
\f1\fs22 \cf2 \CocoaLigature0 gtk/inst/lib/python3.8\

\f0\fs24 \cf0 \CocoaLigature1 mkdir -p ~/
\f1\fs22 \cf2 \CocoaLigature0 gtk/inst/lib/python2.7
\f0\fs24 \cf0 \CocoaLigature1 \
ln -s ~/
\f1\fs22 \cf2 \CocoaLigature0 Library/Python/3.8/lib/python/site-packages 
\f0\fs24 \cf0 \CocoaLigature1 ~/
\f1\fs22 \cf2 \CocoaLigature0 gtk/inst/lib/python3.8/site-packages\

\f0\fs24 \cf0 \CocoaLigature1 ln -s ~/
\f1\fs22 \cf2 \CocoaLigature0 Library/Python/2.7/lib/python/site-packages 
\f0\fs24 \cf0 \CocoaLigature1 ~/
\f1\fs22 \cf2 \CocoaLigature0 gtk/inst/lib/python2.7/site-packages\

\f0\fs24 \cf0 \CocoaLigature1 \
\
\
GIMP_MACOS_BUILD_DIR=~/SkunkWorks/gimp-macos-build\
GTK_OSX_DIR=~/SkunkWorks/gtk-osx\
MACOS_SDK_VERSION=11.1\
\
#\
# Set up ~/.profile\
# Remember to 'source ~/.profile' whenever you want to use jhbuild\
#\
echo 'export SDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX$\{MACOS_SDK_VERSION\}.sdk' > ~/.profile\
echo 'export MACOSX_DEPLOYMENT_TARGET=$\{MACOS_SDK_VERSION\}' >> ~/.profile\
echo 'export PATH="$HOME/.cargo/bin:$HOME/.local/bin:$PATH:$HOME/.new_local/bin:$HOME/
\f1\fs22 \cf3 \CocoaLigature0 Library/Python/3.8/bin
\f0\fs24 \cf0 \CocoaLigature1 "'>> ~/.profile\
\
#for apple silicone use the following\
echo 'export ARCHFLAGS="-arch arm64"' >> ~/.profile\
#for older intel chips use this\
echo 'export ARCHFLAGS="-arch x86_64"' >> ~/.profile\
\
\
#Setup python links in local profile to allow expected behavior of python = python3 for most programs\
\
cd aarch64-apple-gimp\
chmod +x python3-config\
mkdir -p ~/.local/bin\
cp python3-config ~/.local/bin/\
ln -s /usr/bin/python3 ~/.local/bin/python\
\
\
#\
# Install jhbuild toolset\
#\
#run python once to make sure command line tools are installed, press ctrl+d to quit\
python3 \
mkdir -p ~/.config\
chmod +x ./gtk-osx-setup.sh \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \CocoaLigature0 source ~/.profile 
\f0\fs24 \cf0 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 ./gtk-osx-setup.sh\
\
#\
#Install jhbuild configs and setup working directories\
#\
cd $HOME\
\
ln -s aarch64-apple-gimp/Skunkworks Skunkworks\
\
#for apple silicone\
cp $GIMP_MACOS_BUILD_DIR/jhbuildrc-arm64 ~/.config/jhbuildrc-custom\
#for intel\
cp $GIMP_MACOS_BUILD_DIR/jhbuildrc-x86_64 ~/.config/jhbuildrc-custom\
cp $GIMP_MACOS_BUILD_DIR/jhbuildrc ~/.config/jhbuildrc\
\
\
#\
# Bootstrap the build environment and core tool modules\
#\
\
python3 -m pip install --upgrade pip wheel pipenv meson\
source ~/.profile\
$HOME/.new_local/bin/jhbuild bootstrap-gtk-osx-gimp\
\
#\
# Install bundler app\
#\
jhbuild build python python3\
rm  $HOME/.local/bin/*\
cd $HOME/.local/bin/\
ln -s $HOME/gtk/inst/bin/python3.8 python3\
ln -s $HOME/gtk/inst/bin/python3.8-config python3-config\
ln -s $HOME/gtk/inst/bin/python2.7 python2\
ln -s $HOME/gtk/inst/bin/python2.7-config python2-config\
ln -s python3 python\
\
python3 -m pip install --upgrade pip wheel pipenv setuptools meson\
\
cd ~/Source\
git clone https://github.com/samm-git/gtk-mac-bundler -b fix-otool\
cd gtk-mac-bundler\
make install\
\
\
\
#\
# Install base/bootstrap modules - this includes gtk+\
#\
source ~/.profile && jhbuild build icu55 meta-gtk-osx-freetype meta-gtk-osx-bootstrap meta-gtk-osx-core\
\
#\
# Configure jhbuild to use local moduleset file, allowing us to experiment without pushing changes to \
# the samm-git repo first.  Instead, we can modify the files in ~/.cache/jhbuild/ from this point.\
#\
echo "use_local_modulesets = True" >> ~/.config/jhbuildrc-custom \
echo "modulesets_dir = '~/.cache/jhbuild/'" >> ~/.config/jhbuildrc-custom\
\
#\
# Build gimp dependencies in (roughly correct) order, minus babl/gegl and WebKit\
# Ideally this should be a short one-liner that uses jhbuild's dependency graph \
# analysis to load modules in the correct modules.\
#\
jhbuild build suitesparse lcms libunistring gmp libnettle libtasn1 gnutls libjpeg readline glib-networking openjpeg gtk-mac-integration poppler poppler-data\
jhbuild build json-glib p2tc exiv2 gexiv2 ilmbase openexr libwebp libcroco librsvg-24 json-c\
jhbuild build libmypaint mypaint-brushes libde265 nasm x265 libheif aalib shared-mime-info iso-codes libwmf libmng ghostscript\
jhbuild build pycairo pygobject pygtk gtk-mac-integration-python\
\
#\
# Build webkit dependencies - again, should be a simple one-liner\
#\
jhbuild build enchant libpsl sqlite vala\
jhbuild buildone libsoup\
\
#\
# Build webkit (there's plenty of time for tea, biscuits, deep thoughts, more tea...)\
#\
jhbuild buildone webkit\
\
#\
# Build and test babl and gegl\
#\
jhbuild build --check babl gegl\
jhbuild build openexr ilmbase --force\
\
#\
# Build gimp\
#\
jhbuild build gimp\
\
\
\
\
\
\
\
\
}